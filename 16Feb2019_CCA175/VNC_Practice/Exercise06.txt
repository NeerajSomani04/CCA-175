Exercise 6 -->

val ordersRDD = sc.textFile("/public/retail_db/orders")
ordersRDD.map(x => (x.split(",")(0).toInt, x.split(",")(2).toInt)).toDF("order_id","order_customer_id").registerTempTable("ordersTemp")


val customersRDD = sc.textFile("/public/retail_db/customers")
customersRDD.map(x => (x.split(",")(0).toInt, x.split(",")(1), x.split(",")(2), x.split(",")(7))).toDF("cust_id","cust_fname","cust_lname","cust_state").registerTempTable("custTemp")

val finalDF = sqlContext.sql(""" select c.cust_fname, c.cust_lname, temp1.order_count from (select ct.cust_id, count(distinct ot.order_id) as order_count from ordersTemp ot join custTemp ct on ot.order_customer_id = ct.cust_id where ct.cust_state = 'TX' group by ct.cust_id) as temp1 join custTemp c on c.cust_id=temp1.cust_id""")

finalDF.map(x => x(0) + "\t" + x(1) + "\t" + x(2)).saveAsTextFile("/user/dkothari/vnc_problems/problem6/solution")
